<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="GradleMigrationSettings" migrationVersion="1" />
  <component name="GradleSettings">
    <option name="linkedExternalProjectsSettings">
      <GradleProjectSettings>
        <option name="delegatedBuild" value="false" />
        <option name="testRunner" value="GRADLE" />
        <option name="distributionType" value="WRAPPED" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="gradleJvm" value="#JAVA_INTERNAL" />
        <option name="modules">
          <set>
            <option value="$PROJECT_DIR$" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task/build/classes/java" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task/build/generated/sources/annotationProcessor/java" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task/build/generated/sources/headers/java" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task/build/reports/tests" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task/build/test-results" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task/build/tmp" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Adding items" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Concat positive numbers" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Creating list" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Find the nearest number" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/How to get an element by the index" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Output the list's elements" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Powers of indexes" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Removing items" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/The behavior of methods" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Theory" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/What ArrayList can store" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Identify a possible exception" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Identify possible exceptions" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Initializing long value" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/NPE, zero or null" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Only true or false" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Result of the code" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Safe converting" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Theory" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Wrapper classes for char and int" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/Basic calculator" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/Command line arguments" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/Get the game mode" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/How to pass ints" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/How to start a program" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/Parameters and their values" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/Passing three arguments" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/The index of an argument" />
            <option value="$PROJECT_DIR$/Topics/Command-line arguments/Theory" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Comparing objects" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Implement Comparable" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Implement compareTo method" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Implement comparing by additional fields" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Natural ordering" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Rewrite compareTo method" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Rules" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Theory" />
            <option value="$PROJECT_DIR$/Topics/Comparable/compareTo" />
            <option value="$PROJECT_DIR$/Topics/Fields and methods in enum/Balance management" />
            <option value="$PROJECT_DIR$/Topics/Fields and methods in enum/Danger levels" />
            <option value="$PROJECT_DIR$/Topics/Fields and methods in enum/Directions" />
            <option value="$PROJECT_DIR$/Topics/Fields and methods in enum/Robot control" />
            <option value="$PROJECT_DIR$/Topics/Fields and methods in enum/System of units" />
            <option value="$PROJECT_DIR$/Topics/Fields and methods in enum/Theory" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Boxes are not just objects" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Correct the usage of non-generic class" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Initialize an object of a generic class" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Instance without type argument" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Reusing code with Object" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Theory" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/What is a type" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/What is wrong" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Why generics" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Correct the program" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Creating instances" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Declaring generic classes" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Declaring generic classes - 2" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Generic parameter values" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Pastry packing optimization" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Theory" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Type arguments" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Type arguments - 2" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Type parameter inside a class body" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Backward indexes" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Companies" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Count the value occurrences" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Equal lists" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Filtering the list" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Greek letters" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Implementations" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Replacing ArrayList with LinkedList" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Results of operations" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Select correct assignments" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Setting a new name" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Split a list into sublists" />
            <option value="$PROJECT_DIR$/Topics/The List interface/The longest string in the list" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Theory" />
            <option value="$PROJECT_DIR$/Topics/toString()/Account" />
            <option value="$PROJECT_DIR$/Topics/toString()/Books as strings" />
            <option value="$PROJECT_DIR$/Topics/toString()/Class hierarchy" />
            <option value="$PROJECT_DIR$/Topics/toString()/Convert persons and patients to string" />
            <option value="$PROJECT_DIR$/Topics/toString()/Convert vehicles and cars to string" />
            <option value="$PROJECT_DIR$/Topics/toString()/String representation" />
            <option value="$PROJECT_DIR$/Topics/toString()/Theory" />
            <option value="$PROJECT_DIR$/Topics/toString()/Time as a string" />
            <option value="$PROJECT_DIR$/Topics/toString()/Users as strings" />
            <option value="$PROJECT_DIR$/Topics/toString()/toString method" />
            <option value="$PROJECT_DIR$/util" />
          </set>
        </option>
      </GradleProjectSettings>
    </option>
  </component>
</project>